diff --git a/assets/js/modules/page-context.js b/assets/js/modules/page-context.js
index 71be51d9..136371ff 100644
--- a/assets/js/modules/page-context.js
+++ b/assets/js/modules/page-context.js
@@ -1,39 +1,39 @@
+import { computed, ref, onCreated } from 'vue';
 import Product from '@/components/product';
 import Catalog from '@/components/catalog';
 import { getCurrentCategoryId, getCurrentProductId } from '@/services/page-context';
 import { fetchCategories } from '@/services/categories-service';
 
 export default function usePageContext() {
-    /*
-    data() {
-        return {
-            categories: [],
-            currentCategoryId: getCurrentCategoryId(),
-        };
-    },
-    computed: {
-        currentProductId() {
-            return getCurrentProductId();
-        },
-        currentComponent() {
-            return this.currentProductId !== null ? Product : Catalog;
-        },
-        currentProps() {
-            return this.currentProductId !== null
-                ? {
-                    currentProductId: this.currentProductId,
-                    cart: this.cart,
-                }
-                : {
-                    currentCategoryId: this.currentCategoryId,
-                    categories: this.categories,
-                };
-        },
-    },
-    async created() {
+    const categories = ref([]);
+    const currentCategoryId = computed(() => (getCurrentCategoryId()));
+    const currentProductId = computed(() => (getCurrentProductId()));
+
+    const currentComponent = computed(() => (currentProductId.value !== null ? Product : Catalog));
+
+    const currentProps = computed(() => (
+        currentProductId.value !== null
+            ? {
+                currentProductId: currentProductId.value,
+                cart,
+            }
+            : {
+                currentCategoryId: currentCategoryId.value,
+                categories,
+            }
+    ));
+
+    onCreated(async () => {
         const response = await fetchCategories();
 
-        this.categories = response.data['hydra:member'];
-    },
-     */
+        categories.value = response.data['hydra:member'];
+    });
+
+    return {
+        categories,
+        currentCategoryId,
+        currentProductId,
+        currentComponent,
+        currentProps,
+    };
 }
